{
  "config": {
    "step": {
      "user": {
        "title": "Solar Forecast ML - Basic Configuration",
        "description": "Step 1/4: Configure the capacity and efficiency of your solar system.",
        "data": {
          "solar_capacity": "Solar System Capacity (kWp)",
          "panel_efficiency": "Panel Efficiency (0.01-1.0)"
        },
        "data_description": {
          "solar_capacity": "The installed peak capacity of your solar system in kilowatt peak (kWp). Example: 5.0 for a 5 kWp system",
          "panel_efficiency": "Efficiency of the solar panels as decimal number. Example: 0.18 for 18% efficiency"
        }
      },
      "weather": {
        "title": "Select Weather Sensor",
        "description": "Step 2/4: Choose your weather sensor for forecast calculations.",
        "data": {
          "weather_entity": "Weather Sensor"
        },
        "data_description": {
          "weather_entity": "The weather entity to be used for forecast calculations"
        }
      },
      "additional_sensors": {
        "title": "Additional Sensors (Optional)",
        "description": "Step 3/4: Add optional additional sensors for more accurate forecasts.\n\nLeave fields on 'none' if you don't want to use additional sensors.",
        "data": {
          "temp_sensor": "Temperature Sensor",
          "wind_sensor": "Wind Sensor",
          "rain_sensor": "Rain Sensor",
          "uv_sensor": "UV Sensor",
          "lux_sensor": "Brightness Sensor"
        },
        "data_description": {
          "temp_sensor": "External temperature sensor (optional)",
          "wind_sensor": "External wind sensor (optional)",
          "rain_sensor": "External rain sensor (optional)",
          "uv_sensor": "External UV radiation sensor (optional)",
          "lux_sensor": "External brightness sensor in Lux (optional)"
        }
      },
      "power_consumption": {
        "title": "Power & Consumption (Optional)",
        "description": "Step 4/4: Configure optional power and consumption sensors.\n\nThese sensors are used for self-sufficiency calculations and analysis.\n\nLeave fields on 'none' if you don't want to use sensors.",
        "data": {
          "power_entity": "Power Sensor (W)",
          "total_consumption_today": "Daily Consumption (kWh)"
        },
        "data_description": {
          "power_entity": "Current solar power sensor in Watts (optional)",
          "total_consumption_today": "Daily consumption sensor in kWh (optional)"
        }
      },
      "reconfigure_basis": {
        "title": "Solar Forecast ML - Reconfiguration",
        "description": "Step 1/4: Reconfigure the capacity and efficiency of your solar system.",
        "data": {
          "solar_capacity": "Solar System Capacity (kWp)",
          "panel_efficiency": "Panel Efficiency (0.01-1.0)"
        },
        "data_description": {
          "solar_capacity": "The installed peak capacity of your solar system in kilowatt peak (kWp). Example: 5.0 for a 5 kWp system",
          "panel_efficiency": "Efficiency of the solar panels as decimal number. Example: 0.18 for 18% efficiency"
        }
      },
      "reconfigure_weather": {
        "title": "Select Weather Sensor",
        "description": "Step 2/4: Choose your weather sensor for forecast calculations.",
        "data": {
          "weather_entity": "Weather Sensor"
        },
        "data_description": {
          "weather_entity": "The weather entity to be used for forecast calculations"
        }
      },
      "reconfigure_sensors": {
        "title": "Additional Sensors (Optional)",
        "description": "Step 3/4: Add optional additional sensors for more accurate forecasts.\n\nLeave fields on 'none' if you don't want to use additional sensors.",
        "data": {
          "temp_sensor": "Temperature Sensor",
          "wind_sensor": "Wind Sensor",
          "rain_sensor": "Rain Sensor",
          "uv_sensor": "UV Sensor",
          "lux_sensor": "Brightness Sensor"
        },
        "data_description": {
          "temp_sensor": "External temperature sensor (optional)",
          "wind_sensor": "External wind sensor (optional)",
          "rain_sensor": "External rain sensor (optional)",
          "uv_sensor": "External UV radiation sensor (optional)",
          "lux_sensor": "External brightness sensor in Lux (optional)"
        }
      },
      "reconfigure_power": {
        "title": "Power & Consumption (Optional)",
        "description": "Step 4/4: Configure optional power and consumption sensors.\n\nThese sensors are used for self-sufficiency calculations and analysis.\n\nLeave fields on 'none' if you don't want to use sensors.",
        "data": {
          "power_entity": "Power Sensor (W)",
          "total_consumption_today": "Daily Consumption (kWh)"
        },
        "data_description": {
          "power_entity": "Current solar power sensor in Watts (optional)",
          "total_consumption_today": "Daily consumption sensor in kWh (optional)"
        }
      }
    },
    "error": {
      "cannot_connect": "Failed to connect to sensor",
      "invalid_auth": "Invalid authentication",
      "unknown": "Unknown error occurred",
      "invalid_capacity": "Invalid capacity (must be between 0.1 and 1000 kWp)",
      "invalid_efficiency": "Invalid efficiency (must be between 0.01 and 1.0)",
      "invalid_input": "Invalid input"
    },
    "abort": {
      "already_configured": "This integration is already configured",
      "reconfigure_successful": "Reconfiguration completed successfully"
    }
  },
  "options": {
    "step": {
      "init": {
        "title": "Solar Forecast ML - Options",
        "description": "Adjust notifications and additional features.",
        "data": {
          "notify_startup": "Notification: Integration Startup",
          "notify_forecast": "Notification: Forecast Updates",
          "notify_learning": "Notification: Learning Process",
          "notify_successful_learning": "Notification: Successful Learning",
          "update_interval": "Update Interval (minutes)",
          "hourly": "Enable Hourly Forecasts",
          "diagnostic": "Enable Diagnostic Mode"
        },
        "data_description": {
          "notify_startup": "Show notification when the integration starts",
          "notify_forecast": "Show notification for new forecast updates",
          "notify_learning": "Show notification during ML training",
          "notify_successful_learning": "Show notification after successful ML training",
          "update_interval": "How often should forecasts be updated? (5-120 minutes)",
          "hourly": "Enable additional hourly forecasts (optional)",
          "diagnostic": "Enable extended diagnostic sensors for troubleshooting"
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "solar_forecast_heute": {
        "name": "Forecast Today"
      },
      "solar_forecast_morgen": {
        "name": "Forecast Tomorrow"
      },
      "diagnostic_status": {
        "name": "Diagnostic Status"
      },
      "solar_accuracy": {
        "name": "Forecast Accuracy"
      },
      "yesterday_deviation": {
        "name": "Yesterday's Deviation"
      },
      "peak_production_hour": {
        "name": "Peak Production Hour"
      },
      "production_time": {
        "name": "Production Time"
      },
      "average_yield": {
        "name": "Average Yield"
      },
      "autarky": {
        "name": "Self-Sufficiency"
      },
      "last_coordinator_update": {
        "name": "Last Update"
      },
      "update_age": {
        "name": "Update Age"
      },
      "last_ml_training": {
        "name": "Last ML Training"
      },
      "next_scheduled_update": {
        "name": "Next Scheduled Update"
      },
      "ml_service_status": {
        "name": "ML Service Status"
      },
      "coordinator_health": {
        "name": "Coordinator Health"
      },
      "data_files_status": {
        "name": "Data Files Status"
      },
      "external_temp": {
        "name": "External Temperature"
      },
      "external_humidity": {
        "name": "External Humidity"
      },
      "external_wind": {
        "name": "External Wind"
      },
      "external_rain": {
        "name": "External Rain"
      },
      "external_uv": {
        "name": "External UV"
      },
      "external_lux": {
        "name": "External Lux"
      }
    },
    "button": {
      "manual_forecast": {
        "name": "Manual Forecast"
      },
      "retrain_model": {
        "name": "Retrain Model"
      },
      "reset_data": {
        "name": "Reset Data"
      }
    }
  }
}
